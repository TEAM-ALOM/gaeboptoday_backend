generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  studentCode String @id @unique
  name String @unique
  review Review[]
}

model Image {
  urlPath String @id @unique
  mimeType String
  menu Menu? @relation(fields: [menu_name], references: [name])
  menu_name String? @unique
}

model MenuReview {
  id String   @id @unique @default(uuid())
  menu Menu? @relation(fields: [menu_name], references: [name])
  menu_name String @unique()
  reviews Review[]
  review_id String
}

model Menu {
  name String @unique() @id
  menuReview MenuReview?
  lunches Daily[] @relation("daily_lunch")
  dinners Daily[] @relation("daily_dinner")
  rating Float
  image Image?
}

model Daily {
  id     String   @id @unique @default(uuid())
  weekly Weekly?     @relation(fields: [weeklyId], references: [id], onDelete: SetNull)
  weeklyId String? 
  lunch  Menu[] @relation("daily_lunch")
  dinner Menu[] @relation("daily_dinner")
}

model Review {
  id Int @id @unique @default(autoincrement())
  review_id String
  menuReview MenuReview @relation(fields: [review_id], references: [id])
  writer User? @relation(fields: [writer_id], references: [studentCode], onDelete: Cascade)
  writer_id String?
  rate Float
}

model Data {
  id      String @id @unique @default(uuid())
  content Weekly[]
  createdAt DateTime @default(now()) @db.Timestamptz(3)
}

model Weekly {
  id      String      @id @unique @default(uuid())
  data    Data?        @relation(fields: [dataId], references: [id], onDelete: SetNull)
  dataId  String?
  day     DateTime
  content Daily[]
}
